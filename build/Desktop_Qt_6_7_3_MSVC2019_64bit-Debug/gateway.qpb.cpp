/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#include "gateway.qpb.h"
#include <QtProtobuf/qprotobufserializer.h>
#include <cmath>

namespace bite_im {

class ClientAuthenticationReq_QtProtobufData : public QSharedData
{
public:
    ClientAuthenticationReq_QtProtobufData()
        : QSharedData()
    {
    }

    ClientAuthenticationReq_QtProtobufData(const ClientAuthenticationReq_QtProtobufData &other)
        : QSharedData(other),
          m_requestId(other.m_requestId),
          m_sessionId(other.m_sessionId)
    {
    }

    QString m_requestId;
    QString m_sessionId;
};

ClientAuthenticationReq::~ClientAuthenticationReq() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 9> qt_protobuf_ClientAuthenticationReq_uint_data;
    const char qt_protobuf_ClientAuthenticationReq_char_data[53];
} qt_protobuf_ClientAuthenticationReq_metadata {
    // data
    {
        0, /* = version */
        2, /* = num fields */
        3, /* = field number offset */
        5, /* = property index offset */
        7, /* = field flags offset */
        31, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        32, /* = requestId */
        42, /* = sessionId */
        52, /* = end-of-string-marker */
        // Field numbers:
        1, /* = requestId */
        2, /* = sessionId */
        // Property indices:
        0, /* = requestId */
        1, /* = sessionId */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = requestId */
        QtProtobufPrivate::NoFlags, /* = sessionId */
    },
    // char_data
    /* metadata char_data: */
    "bite_im.ClientAuthenticationReq\0" /* = full message name */
    /* field char_data: */
    "requestId\0sessionId\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering ClientAuthenticationReq::propertyOrdering = {
    &qt_protobuf_ClientAuthenticationReq_metadata.data
};

void ClientAuthenticationReq::registerTypes()
{
    qRegisterMetaType<ClientAuthenticationReq>();
    qRegisterMetaType<ClientAuthenticationReqRepeated>();
}

ClientAuthenticationReq::ClientAuthenticationReq()
    : QProtobufMessage(&ClientAuthenticationReq::staticMetaObject),
      dptr(new ClientAuthenticationReq_QtProtobufData)
{
}

ClientAuthenticationReq::ClientAuthenticationReq(const ClientAuthenticationReq &other)
    : QProtobufMessage(other),
      dptr(other.dptr)
{
}
ClientAuthenticationReq &ClientAuthenticationReq::operator =(const ClientAuthenticationReq &other)
{
    QProtobufMessage::operator=(other);
    dptr = other.dptr;
    return *this;
}
ClientAuthenticationReq::ClientAuthenticationReq(ClientAuthenticationReq &&other) noexcept
    : QProtobufMessage(std::move(other)),
      dptr(std::move(other.dptr))
{
}
ClientAuthenticationReq &ClientAuthenticationReq::operator =(ClientAuthenticationReq &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    dptr.swap(other.dptr);
    return *this;
}
bool ClientAuthenticationReq::operator ==(const ClientAuthenticationReq &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && dptr->m_requestId == other.dptr->m_requestId
        && dptr->m_sessionId == other.dptr->m_sessionId;
}

bool ClientAuthenticationReq::operator !=(const ClientAuthenticationReq &other) const
{
    return !this->operator ==(other);
}

QString ClientAuthenticationReq::requestId() const
{
    return dptr->m_requestId;
}

QString ClientAuthenticationReq::sessionId() const
{
    return dptr->m_sessionId;
}

void ClientAuthenticationReq::setRequestId(const QString &requestId)
{
    if (dptr->m_requestId != requestId) {
        dptr.detach();
        dptr->m_requestId = requestId;
    }
}

void ClientAuthenticationReq::setSessionId(const QString &sessionId)
{
    if (dptr->m_sessionId != sessionId) {
        dptr.detach();
        dptr->m_sessionId = sessionId;
    }
}


class ClientAuthenticationRsp_QtProtobufData : public QSharedData
{
public:
    ClientAuthenticationRsp_QtProtobufData()
        : QSharedData(),
          m_success(false)
    {
    }

    ClientAuthenticationRsp_QtProtobufData(const ClientAuthenticationRsp_QtProtobufData &other)
        : QSharedData(other),
          m_requestId(other.m_requestId),
          m_success(other.m_success),
          m_errmsg(other.m_errmsg)
    {
    }

    QString m_requestId;
    bool m_success;
    QString m_errmsg;
};

ClientAuthenticationRsp::~ClientAuthenticationRsp() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 13> qt_protobuf_ClientAuthenticationRsp_uint_data;
    const char qt_protobuf_ClientAuthenticationRsp_char_data[58];
} qt_protobuf_ClientAuthenticationRsp_metadata {
    // data
    {
        0, /* = version */
        3, /* = num fields */
        4, /* = field number offset */
        7, /* = property index offset */
        10, /* = field flags offset */
        31, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        32, /* = requestId */
        42, /* = success */
        50, /* = errmsg */
        57, /* = end-of-string-marker */
        // Field numbers:
        1, /* = requestId */
        2, /* = success */
        3, /* = errmsg */
        // Property indices:
        0, /* = requestId */
        1, /* = success */
        2, /* = errmsg */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = requestId */
        QtProtobufPrivate::NoFlags, /* = success */
        QtProtobufPrivate::NoFlags, /* = errmsg */
    },
    // char_data
    /* metadata char_data: */
    "bite_im.ClientAuthenticationRsp\0" /* = full message name */
    /* field char_data: */
    "requestId\0success\0errmsg\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering ClientAuthenticationRsp::propertyOrdering = {
    &qt_protobuf_ClientAuthenticationRsp_metadata.data
};

void ClientAuthenticationRsp::registerTypes()
{
    qRegisterMetaType<ClientAuthenticationRsp>();
    qRegisterMetaType<ClientAuthenticationRspRepeated>();
}

ClientAuthenticationRsp::ClientAuthenticationRsp()
    : QProtobufMessage(&ClientAuthenticationRsp::staticMetaObject),
      dptr(new ClientAuthenticationRsp_QtProtobufData)
{
}

ClientAuthenticationRsp::ClientAuthenticationRsp(const ClientAuthenticationRsp &other)
    : QProtobufMessage(other),
      dptr(other.dptr)
{
}
ClientAuthenticationRsp &ClientAuthenticationRsp::operator =(const ClientAuthenticationRsp &other)
{
    QProtobufMessage::operator=(other);
    dptr = other.dptr;
    return *this;
}
ClientAuthenticationRsp::ClientAuthenticationRsp(ClientAuthenticationRsp &&other) noexcept
    : QProtobufMessage(std::move(other)),
      dptr(std::move(other.dptr))
{
}
ClientAuthenticationRsp &ClientAuthenticationRsp::operator =(ClientAuthenticationRsp &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    dptr.swap(other.dptr);
    return *this;
}
bool ClientAuthenticationRsp::operator ==(const ClientAuthenticationRsp &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && dptr->m_requestId == other.dptr->m_requestId
        && dptr->m_success == other.dptr->m_success
        && dptr->m_errmsg == other.dptr->m_errmsg;
}

bool ClientAuthenticationRsp::operator !=(const ClientAuthenticationRsp &other) const
{
    return !this->operator ==(other);
}

QString ClientAuthenticationRsp::requestId() const
{
    return dptr->m_requestId;
}

bool ClientAuthenticationRsp::success() const
{
    return dptr->m_success;
}

QString ClientAuthenticationRsp::errmsg() const
{
    return dptr->m_errmsg;
}

void ClientAuthenticationRsp::setRequestId(const QString &requestId)
{
    if (dptr->m_requestId != requestId) {
        dptr.detach();
        dptr->m_requestId = requestId;
    }
}

void ClientAuthenticationRsp::setSuccess(const bool &success)
{
    if (dptr->m_success != success) {
        dptr.detach();
        dptr->m_success = success;
    }
}

void ClientAuthenticationRsp::setErrmsg(const QString &errmsg)
{
    if (dptr->m_errmsg != errmsg) {
        dptr.detach();
        dptr->m_errmsg = errmsg;
    }
}

} // namespace bite_im

#include "moc_gateway.qpb.cpp"
